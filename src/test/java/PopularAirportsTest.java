// Generated by Selenium IDE
import org.junit.Assert;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class PopularAirportsTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    private WebDriverWait wait;
    JavascriptExecutor js;
    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void testChrome(){
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        testPopularAirports();
    }

    @Test
    public void testFirefox(){
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        testPopularAirports();
    }
    public String waitForWindow(int timeout) {
        try {
            Thread.sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }
    private void testPopularAirports() {
        driver.get("https://www.tinkoff.ru/travel/flights");
        driver.manage().window().setSize(new Dimension(1552, 840));
        wait.until(ExpectedConditions.presenceOfElementLocated(
                By.xpath("//div[14]/div/div/div/div/h2"))
        );
        // Проверяем количество показанных аэропортов
        var routesNumber = driver.findElements(By.className("Items__item_mH35G")).size();
        Assert.assertEquals(12, routesNumber);

        // Проверяем наличие аэропрта Пулково
        var found = driver
                .findElements(By.className("Link-module__inner_AUi26"))
                .stream()
                .anyMatch(el -> el.getText().equals("Пулково"));
        Assert.assertTrue(found);

        driver.findElements(By.className("Link-module__inner_AUi26"))
                .stream()
                .filter(el -> el.getText().equals("Пулково"))
                .findFirst()
                .get()
                .click();
        var title = wait.until(ExpectedConditions.presenceOfElementLocated(
                By.xpath("//p"))
        ).getText();
        Assert.assertEquals(
                "Поиск билетов из аэропорта Пулково",
                title
        );
    }
}