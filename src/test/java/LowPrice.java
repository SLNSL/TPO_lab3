// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class LowPrice {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @Before
    public void setUp() {
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    public String waitForWindow(int timeout) {
        try {
            Thread.sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }
    @Test
    public void test() {
        driver.get("https://www.tinkoff.ru/travel/tours/?internal_source=navPanelFromMainPageToToursMain");
        driver.switchTo().frame(0);
        {
            List<WebElement> elements = driver.findElements(By.xpath("//div[@id=\'priceCalendar\']"));
            assert(elements.size() > 0);
        }
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@id=\'priceCalendar\']/div[3]/div/div[3]/div[3]/div[3]/div[2]/div[9]/div/div/div")));


        vars.put("min_price", js.executeScript("return document.evaluate(\"//div[@id=\'priceCalendar\']/div[3]/div/div[3]/div[3]/div[3]/div[2]/div[9]/div/div/div\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.textContent.trim().split(\' \').slice(1,3).toString()"));
        System.out.println(vars.get("min_price").toString());
        vars.put("window_handles", driver.getWindowHandles());
        driver.findElement(By.cssSelector(".cls-itu-column:nth-child(9) .cls-d-ind")).click();
        vars.put("win3843", waitForWindow(2000));
        vars.put("root", driver.getWindowHandle());
        driver.switchTo().window(vars.get("win3843").toString());
        driver.findElement(By.name("destination")).click();
        driver.findElement(By.cssSelector("label:nth-child(1) .checkbox")).click();
        driver.findElement(By.cssSelector(".withoutKids")).click();
        driver.findElement(By.cssSelector("label:nth-child(4)")).click();
        driver.findElement(By.cssSelector("strong:nth-child(3)")).click();
        vars.put("perc", js.executeScript("return document.evaluate(\"//*[@id=\\\"searchProgressBar\\\"]/div/div[1]\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.style.width"));
        while (Double.parseDouble(vars.get("perc").toString().substring(0, vars.get("perc").toString().length() - 1)) < 50) {
            System.out.println(vars.get("perc"));
            vars.put("perc", js.executeScript("return document.evaluate(\"//*[@id=\\\"searchProgressBar\\\"]/div/div[1]\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.style.width"));
        }
        vars.put("price", js.executeScript("return document.evaluate(\"//div[@id=\'hotelTemplate\']/div/div/div[2]/div[2]/a/span[2]/span\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.textContent.split(\' \').toString()"));
        System.out.println(vars.get("price").toString());
        assertEquals(vars.get("price").toString(), vars.get("min_price").toString());


    }
}
