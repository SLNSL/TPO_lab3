// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class PickNomer {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    driver.manage().window().maximize();
    vars = new HashMap<String, Object>();
  }

  @Test
  public void test() {
    // Test name: Выбор номера
    // Step # | name | target | value | comment
    // 1 | open | https://tinkoff.travelata.ru/hotel/284322#?fromCity=1&dateFrom=09.05.2023&dateTo=09.05.2023&nightFrom=2&nightTo=7&adults=1&priceFrom=6000&priceTo=50000000&meal=all&activeTab=tours&sid=soe88ysxj5&hsid=04kn5kd9cu |  | 
    driver.get("https://tinkoff.travelata.ru/hotel/284322#?fromCity=1&dateFrom=09.05.2023&dateTo=09.05.2023&nightFrom=2&nightTo=7&adults=1&priceFrom=6000&priceTo=50000000&meal=all&activeTab=tours&sid=soe88ysxj5&hsid=04kn5kd9cu");
    vars.put("name", js.executeScript("return document.evaluate(\"/html/body/section/div/div/div/section[1]/div/div/div[2]/div[1]/div[1]/div[3]\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.innerHTML"));


    // 3 | click | xpath=//div[@id='tab-content-tours']/div/div[2]/div/div/div[3]/div/div |  |
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@id='tab-content-tours']/div/div[2]/div/div/div[3]/div/div")));

    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@id='tab-content-tours']/div/div[2]/div/div/div[3]/div/div"))).click();
    // 4 | click | xpath=//div[@id='tab-content-tours']/div/div[2]/div/div/div[3]/div/div[2]/div/label/div |  | 
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@id='tab-content-tours']/div/div[2]/div/div/div[3]/div/div[2]/div/label/div"))).click();
    // 5 | click | xpath=//div[@id='tourProductTemplate']/div/div/a/div/div[2]/div/div[2] |  |
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@id=\'tourProductTemplate\']/div/div/a/div/div[2]/div/div[2]"))).click();
    // 6 | click | xpath=//div[2]/div[3]/div/div/div[2]/div/div[3] |  |
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[2]/div[3]/div/div/div[2]/div/div[3]"))).click();
    // 7 | click | xpath=//div[@id='basicCustomerCreateOrderButton']/span |  |
    driver.findElement(By.xpath("//div[@id=\'basicCustomerCreateOrderButton\']/span")).click();
    // 8 | assertText | css=.paymentBlock__btn-title | Оплатить полную стоимость |
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[@id=\"checkoutForm\"]/div[2]/div[1]/div/div/div[4]/div[1]/div/div[1]/div/div[3]/div[2]")));
    assertThat(driver.findElement(By.xpath("//*[@id=\"checkoutForm\"]/div[2]/div[1]/div/div/div[4]/div[1]/div/div[1]/div/div[3]/div[2]")).getText().substring(0, 25), is("Оплатить полную стоимость"));
    assertEquals(vars.get("name").toString().substring(0, vars.get("name").toString().length() - 6), js.executeScript("return document.evaluate(\"//*[@id=\\\"checkoutLayer\\\"]/div[2]/div[1]/div[2]/div[1]\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.innerHTML").toString());


  }
}
